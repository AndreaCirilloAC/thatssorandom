% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ifelse_wrapper.R
\name{i}
\alias{i}
\alias{e}
\alias{ie}
\title{Functions that form a Wrapper around \code{ifelse}.}
\usage{
i(if_stat, then)

e(else_ret)

ie(...)
}
\arguments{
\item{if_stat}{Logical condition forming the if statement.}

\item{then}{Value to be returned, when \code{if_stat} is \code{TRUE}.}

\item{else_ret}{Value to be returned, when all \code{if_stat}s are
\code{FALSE}.}
}
\description{
\code{ifelse} functions can be nested to do a vectorised if then else
evaluation, with multiple if then statements. Although this is functional it
often gives messy code. These three functions provide a wrapper, so the
code gets cleaner.
}
\examples{
set.seed(0310)
x <- runif(1000, 1, 20)
y <- runif(1000, 1, 20)
ie(
  i(x < 5 & y < 5,   'A'),
  i(x < 5 & y < 15,  'B'),
  i(x < 5,           'C'),
  i(x < 15 & y < 5,  'D'),
  i(x < 15 & y < 15, 'E'),
  i(y < 5,           'F'),
  i(y < 15,          'G'),
  e('H')
)
}
\seealso{
\url{https://edwinth.github.io/blog/ifelse-wrapper/}
}
